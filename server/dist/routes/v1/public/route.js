"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const express_1 = require("express");
const UserController = tslib_1.__importStar(require("@controllers/UserController"));
const FileController = tslib_1.__importStar(require("@controllers/FileController"));
const ProjectController = tslib_1.__importStar(require("@controllers/ProjectController"));
const _authentication_1 = require("@authentication");
const multer_1 = tslib_1.__importDefault(require("multer"));
const path = (0, express_1.Router)();
const upload = (0, multer_1.default)({ storage: multer_1.default.memoryStorage() });
path.get("/me", _authentication_1.auth, UserController.userData);
path.get("/download/:projectName", _authentication_1.auth, FileController.downloadFile);
path.get("/list", _authentication_1.auth, ProjectController.listProjects);
path.get("/project/:projectName", _authentication_1.auth, ProjectController.getSettings);
path.post("/login", UserController.login);
path.post("/register", UserController.register);
path.post("/token", _authentication_1.auth, UserController.generateRegistrationToken);
path.post("/upload", _authentication_1.auth, upload.single('file'), FileController.uploadFile);
path.post("/project", _authentication_1.auth, ProjectController.createProject);
path.delete("/delete/:projectName", _authentication_1.auth, ProjectController.deleteProject);
path.put("/elaborate", _authentication_1.auth, FileController.elaborateFile);
path.put("/settings/:projectName", _authentication_1.auth, ProjectController.updateSettings);
path.patch("/grant", _authentication_1.auth, UserController.grantAdminPermissions);
path.patch("/revoke", _authentication_1.auth, UserController.revokeAdminPermissions);
exports.default = path;
